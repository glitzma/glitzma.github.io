(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{510:function(e,t,a){"use strict";a.r(t);var n=a(7),s=Object(n.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h2",{attrs:{id:"http请求报文和http响应报文"}},[e._v("HTTP请求报文和HTTP响应报文")]),e._v(" "),a("p",[e._v("HTTP报文是面向文本的，报文中的每一个字段都是一些ASCII码串，各个字段的长度是不确定的。HTTP有两类报文：请求报文和响应报文。")]),e._v(" "),a("p",[e._v("HTTP请求报文")]),e._v(" "),a("p",[e._v("一个HTTP请求报文由"),a("em",[e._v("请求行（request line）、请求头部（header）、空行和请求数据")]),e._v("4个部分组成，下图给出了请求报文的一般格式。")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("＜request-line＞\n\n＜headers＞\n\n＜blank line＞\n\n[＜request-body＞\n")])])]),a("h3",{attrs:{id:"_1-请求头"}},[e._v("1.请求头")]),e._v(" "),a("p",[e._v("请求行由请求方法字段、URL字段和HTTP协议版本字段3个字段组成，它们用空格分隔。例如，GET /index.html HTTP/1.1。")]),e._v(" "),a("p",[e._v("HTTP协议的请求方法有GET、POST、HEAD、PUT、DELETE、OPTIONS、TRACE、CONNECT。")]),e._v(" "),a("h5",{attrs:{id:"_1-get"}},[e._v("1).GET")]),e._v(" "),a("p",[e._v("最常见的一种请求方式，当客户端要从服务器中读取文档时，当点击网页上的链接或者通过在浏览器的地址栏输入网址来浏览网页的，使用的都是GET方式。GET方法要求服务器将URL定位的资源放在响应报文的数据部分，回送给客户端。使用GET方法时，请求参数和对应的值附加在URL后面，利用一个问号（“?”）代表URL的结尾与请求参数的开始，传递参数长度受限制。例如，"),a("code",[e._v("/index.jsp?id=100&op=bind")]),e._v(",这样通过GET方式传递的数据直接表示在地址中，所以我们可以把请求结果以链接的形式发送给好友。以用google搜索domety为例，Request格式如下：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('GET /search?hl=zh-CN&source=hp&q=domety&aq=f&oq= HTTP/1.1\nAccept: image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, application/vnd.ms-excel, application/vnd.ms-powerpoint,\napplication/msword, application/x-silverlight, application/x-shockwave-flash, */*\nReferer: <a href="http://www.google.cn/">http://www.google.cn/</a>\nAccept-Language: zh-cn\nAccept-Encoding: gzip, deflate\nUser-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 2.0.50727; TheWorld)\nHost: <a href="http://www.google.cn">www.google.cn</a>\nConnection: Keep-Alive\nCookie: PREF=ID=80a06da87be9ae3c:U=f7167333e2c3b714:NW=1:TM=1261551909:LM=1261551917:S=ybYcq2wpfefs4V9g;\nNID=31=ojj8d-IygaEtSxLgaJmqSjVhCspkviJrB6omjamNrSm8lZhKy_yMfO2M4QMRKcH1g0iQv9u-2hfBW7bUFwVh7pGaRUb0RnHcJU37y-\nFxlRugatx63JLv7CWMD6UB_O_r\n')])])]),a("p",[e._v("可以看到，GET方式的请求一般不包含”请求内容”部分，请求数据以地址的形式表现在请求行。地址链接如下：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('<a href="http://www.google.cn/search?hl=zh-CN&source=hp&q=domety&aq=f&oq=">http://www.google.cn/search?hl=zh-CN&source=hp\n&q=domety&aq=f&oq=</a>\n')])])]),a("p",[e._v("地址中”?”之后的部分就是通过GET发送的请求数据，我们可以在地址栏中清楚的看到，各个数据之间用”&”符号隔开。显然，这种方式不适合传送私密数据。另外，由于不同的浏览器对地址的字符限制也有所不同，一般最多只能识别1024个字符，所以如果需要传送大量数据的时候，也不适合使用GET方式。")]),e._v(" "),a("h5",{attrs:{id:"_2-post"}},[e._v("2).POST")]),e._v(" "),a("p",[e._v("对于上面提到的不适合使用GET方式的情况，可以考虑使用POST方式，因为使用POST方法可以允许客户端给服务器提供信息较多。POST方法将请求参数封装在HTTP请求数据中，以名称/值的形式出现，可以传输大量数据，这样POST方式对传送的数据大小没有限制，而且也不会显示在URL中。还以上面的搜索domety为例，如果使用POST方式的话，格式如下：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(' POST /search HTTP/1.1\n Accept: image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, application/vnd.ms-excel, application/vnd.ms-powerpoint,\n application/msword, application/x-silverlight, application/x-shockwave-flash, */*\n Referer: <a href="http://www.google.cn/">http://www.google.cn/</a>\n Accept-Language: zh-cn\n Accept-Encoding: gzip, deflate\n User-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 2.0.50727; TheWorld)\n Host: <a href="http://www.google.cn">www.google.cn</a>\n Connection: Keep-Alive\n Cookie: PREF=ID=80a06da87be9ae3c:U=f7167333e2c3b714:NW=1:TM=1261551909:LM=1261551917:S=ybYcq2wpfefs4V9g;\n NID=31=ojj8d-IygaEtSxLgaJmqSjVhCspkviJrB6omjamNrSm8lZhKy_yMfO2M4QMRKcH1g0iQv9u-2hfBW7bUFwVh7pGaRUb0RnHcJU37y-\n FxlRugatx63JLv7CWMD6UB_O_r\n\n hl=zh-CN&source=hp&q=domety\n 复制代码\n 可以看到，POST方式请求行中不包含数据字符串，这些数据保存在”请求内容”部分，各数据之间也是使用”&”符号隔开。POST方式大多用于页面的表单中。因为POST也能完成GET的功能，因此多数人在设计表单的时候一律都使用POST方式，其实这是一个误区。GET方式也有自己的特点和优势，我们应该根据不同的情况来选择是使用GET还是使用POST。\n')])])]),a("h5",{attrs:{id:"_3-head"}},[e._v("3).HEAD")]),e._v(" "),a("p",[e._v("HEAD就像GET，只不过服务端接受到HEAD请求后只返回响应头，而不会发送响应内容。当我们只需要查看某个页面的状态的时候，使用HEAD是非常高效的，因为在传输的过程中省去了页面内容。")]),e._v(" "),a("h3",{attrs:{id:"_2-请求头部"}},[e._v("2.请求头部")]),e._v(" "),a("p",[e._v("请求头部由关键字/值对组成，每行一对，关键字和值用英文冒号“:”分隔。请求头部通知服务器有关于客户端请求的信息，典型的请求头有：")]),e._v(" "),a("p",[e._v("User-Agent：产生请求的浏览器类型。")]),e._v(" "),a("p",[e._v("Accept：客户端可识别的内容类型列表。")]),e._v(" "),a("p",[e._v("Host：请求的主机名，允许多个域名同处一个IP地址，即虚拟主机。")]),e._v(" "),a("h3",{attrs:{id:"_3-空行"}},[e._v("3.空行")]),e._v(" "),a("p",[e._v("最后一个请求头之后是一个空行，发送回车符和换行符，通知服务器以下不再有请求头。")]),e._v(" "),a("h3",{attrs:{id:"_4-请求数据"}},[e._v("4.请求数据")]),e._v(" "),a("p",[e._v("请求数据不在GET方法中使用，而是在POST方法中使用。POST方法适用于需要客户填写表单的场合。与请求数据相关的最常使用的请求头是Content-Type和Content-Length。")]),e._v(" "),a("p",[e._v("HTTP报文")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" HTTP响应也由三个部分组成，分别是：状态行、消息报头、响应正文。\n")])])]),a("p",[e._v("如下所示，HTTP响应的格式与请求的格式十分类似：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" ＜status-line＞\n\n ＜headers＞\n\n ＜blank line＞\n\n [＜response-body＞]\n")])])]),a("p",[e._v("正如你所见，在响应中唯一真正的区别在于第一行中用状态信息代替了请求信息。状态行（status line）通过提供一个状态码来说明所请求的资源情况。")]),e._v(" "),a("p",[e._v("状态行格式如下：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" HTTP-Version Status-Code Reason-Phrase CRLF\n")])])]),a("p",[e._v("其中，HTTP-Version表示服务器HTTP协议的版本；Status-Code表示服务器发回的响应状态代码；Reason-Phrase表示状态代码的文本描述。状态代码由三位数字组成，第一个数字定义了响应的类别，且有五种可能取值。")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" 1xx：指示信息--表示请求已接收，继续处理。\n 2xx：成功--表示请求已被成功接收、理解、接受。\n 3xx：重定向--要完成请求必须进行更进一步的操作。\n 4xx：客户端错误--请求有语法错误或请求无法实现。\n 5xx：服务器端错误--服务器未能实现合法的请求。\n 常见状态代码、状态描述的说明如下。\n\n 200 OK：客户端请求成功。\n 206 Partial Content // 客服发起了一个带有range头的get请求，服务器完成了它，用于视频音频很大时，基本返回206\n 301 Moved Permanently // 所请求的页面已转移至新的url，永久重定向\n 302 Found // 所请求的页面已经临时转移至新的url，临时重定向\n 304 Not Modified // 客户端有缓冲的文档并发出了一个条件性的请求，服务器告诉客户，原来缓冲的文档还可以继续使用\n 400 Bad Request  // 客户端请求有语法错误，不能被服务器所理解\n 401 Unauthorized // 请求未经授权，这个状态代码必须和WWW-Authenticate报头域一起使用\n 403 Forbidden  // 服务器收到请求，但是拒绝提供服务\n 404 Not Found  // 请求资源不存在，eg：输入了错误的URL\n 500 Internal Server Error // 服务器发生不可预期的错误\n 503 Server Unavailable  // 服务器当前不能处理客户端的请求，服务器临时过载或当机 ，一段时间后可能恢复正常\n")])])]),a("p",[e._v("下面给出一个HTTP响应报文例子")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" HTTP/1.1 200 OK\n Date: Sat, 31 Dec 2005 23:59:59 GMT\n Content-Type: text/html;charset=ISO-8859-1\n Content-Length: 122\n\n ＜html＞\n ＜head＞\n ＜title＞Wrox Homepage＜/title＞\n ＜/head＞\n ＜body＞\n ＜!-- body goes here --＞\n ＜/body＞\n ＜/html＞\n")])])]),a("h4",{attrs:{id:"关于http请求get和post的区别"}},[e._v("关于HTTP请求GET和POST的区别")]),e._v(" "),a("ol",[a("li",[e._v("GET提交，请求的数据会附在URL之后（就是把数据放置在HTTP协议头"),a("code",[e._v("＜request-line＞")]),e._v("中），以?分割URL和传输数据，多个参数用&连接;例如：")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("login.action?name=hyddd&password=idontknow&verify=%E4%BD%A0 %E5%A5%BD\n")])])]),a("p",[e._v("如果数据是英文字母/数字，原样发送，如果是空格，转换为+，如果是中文/其他字符，则直接把字符串用BASE64加密，得出如： %E4%BD%A0%E5%A5%BD，其中％XX中的XX为该符号以16进制表示的ASCII。")]),e._v(" "),a("p",[e._v("POST提交：把提交的数据放置在是HTTP包的包体"),a("code",[e._v("＜request-body＞")]),e._v("中。上文示例中红色字体标明的就是实际的传输数据")]),e._v(" "),a("p",[e._v("因此，GET提交的数据会在地址栏中显示出来，而POST提交，地址栏不会改变")]),e._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[e._v("传输数据的大小：")])]),e._v(" "),a("p",[e._v("首先声明,HTTP协议没有对传输的数据大小进行限制，HTTP协议规范也没有对URL长度进行限制。 而在实际开发中存在的限制主要有：")]),e._v(" "),a("p",[e._v("GET:特定浏览器和服务器对URL长度有限制，例如IE对URL长度的限制是2083字节(2K+35)。对于其他浏览器，如Netscape、FireFox等，理论上没有长度限制，其限制取决于操作系统的支持。")]),e._v(" "),a("p",[e._v("因此对于GET提交时，传输数据就会受到URL长度的限制。")]),e._v(" "),a("p",[e._v("POST:由于不是通过URL传值，理论上数据不受限。但实际各个WEB服务器会规定对post提交数据大小进行限制，Apache、IIS6都有各自的配置。")]),e._v(" "),a("ol",{attrs:{start:"3"}},[a("li",[e._v("安全性：")])]),e._v(" "),a("p",[e._v("POST的安全性要比GET的安全性高。注意：这里所说的安全性和上面GET提到的“安全”不是同个概念。上面“安全”的含义仅仅是不作数据修改，而这里安全的含义是真正的Security的含义，比如：通过GET提交数据，用户名和密码将明文出现在URL上，因为"),a("br"),e._v("\n(1)登录页面有可能被浏览器缓存，"),a("br"),e._v("\n(2)其他人查看浏览器的历史纪录，那么别人就可以拿到你的账号和密码了，")]),e._v(" "),a("ol",{attrs:{start:"4"}},[a("li",[e._v("get浏览器回退时是无害的，而post会再次提交请求")]),e._v(" "),a("li",[e._v("get产生的url可以被收藏，而post不可以")]),e._v(" "),a("li",[e._v("get请求会被浏览器主动缓存，而post不会，除非手动设置")]),e._v(" "),a("li",[e._v("get请求只能进行url编码，而post支持多种编码方式")]),e._v(" "),a("li",[e._v("get请求参数会被完整保留在浏览器历史记录中，而post参数不会被保留")]),e._v(" "),a("li",[e._v("对参数的数据类型，get只接受ascii字符，而post没有限制")])])])}),[],!1,null,null,null);t.default=s.exports}}]);