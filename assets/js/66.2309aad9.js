(window.webpackJsonp=window.webpackJsonp||[]).push([[66],{512:function(t,r,e){"use strict";e.r(r);var a=e(5),p=Object(a.a)({},(function(){var t=this,r=t.$createElement,e=t._self._c||r;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"在英语中的attribute-与-property区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#在英语中的attribute-与-property区别"}},[t._v("#")]),t._v(" 在英语中的attribute 与 property区别")]),t._v(" "),e("p",[t._v("Property在英语里有财产的含义，一般指对象的组成部分，可以是简单数据也可以是对象或对象集合. Attribute多指一个对象的特征，绝大的数情况下是一个描述性的数据。打个比方，可能不是很恰当：张三是中国人，身上有一百块钱。中国人就是张三的attribute, 100块钱就是张三的property. 在c#中，property 通常（不绝对）是在类里声明的。而Arrtibute是对某个类或者方法的描述，一般在被描述的类或者方法声明代码上方出现的。")]),t._v(" "),e("h2",{attrs:{id:"dom-中property-与-attribute"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#dom-中property-与-attribute"}},[t._v("#")]),t._v(" DOM 中property 与 attribute")]),t._v(" "),e("p",[t._v("property 和 attribute非常容易混淆，两个单词的中文翻译也都非常相近（property：属性，attribute：特性），但实际上，二者是不同的东西，属于不同的范畴。")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("property：javascript面象对象编程中的property(属性)\n例：\n    //假定我们把猫看成一个对象，它有\"名字\"和\"颜色\"两个属性。\n    　　var Cat = {\n    　　　　name : '',\n\n    　　　　color : ''\n\n    　　}\n\nattribute是HTML标签上的特性，可以通过getAttribute获取，setAttribute赋值\n")])])]),e("p",[t._v("DOM有其默认的基本属性，而这些属性就是所谓的“property”，无论如何，它们都会在初始化的时候再DOM对象上创建。")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("property能够从attribute中得到同步；\nattribute不会同步property上的值；\nattribute和property之间的数据绑定是单向的，attribute->property；\n更改property和attribute上的任意值，都会将更新反映到HTML页面中；\n")])])])])}),[],!1,null,null,null);r.default=p.exports}}]);